// Mocks generated by Mockito 5.3.1 from annotations
// in app_masterclass/test/app/home/tabs/repositories/external/datasources/commits_gitrepo_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:uno/src/domain/domain.dart' as _i4;
import 'package:uno/src/inject_context.dart' as _i3;
import 'package:uno/src/presenter/uno_base.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_1 extends _i1.SmartFake implements _i2.Interceptors {
  _FakeInterceptors_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInjectContext_2 extends _i1.SmartFake implements _i3.InjectContext {
  _FakeInjectContext_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Uno].
///
/// See the documentation for Mockito's code generation for more information.
class MockUno extends _i1.Mock implements _i2.Uno {
  @override
  String get baseURL => (super.noSuchMethod(
        Invocation.getter(#baseURL),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  Duration get timeout => (super.noSuchMethod(
        Invocation.getter(#timeout),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#timeout),
        ),
        returnValueForMissingStub: _FakeDuration_0(
          this,
          Invocation.getter(#timeout),
        ),
      ) as Duration);
  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  _i2.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_1(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_1(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i2.Interceptors);
  @override
  _i3.InjectContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeInjectContext_2(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeInjectContext_2(
          this,
          Invocation.getter(#context),
        ),
      ) as _i3.InjectContext);
  @override
  _i5.Future<_i4.Response> call({
    required String? url,
    Duration? timeout,
    String? method = r'get',
    Map<String, String>? params = const {},
    Map<String, String>? headers = const {},
    _i4.ResponseType? responseType = _i4.ResponseType.json,
    _i2.DownloadCallback? onDownloadProgress,
    _i4.ValidateCallback? validateStatus,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #url: url,
            #timeout: timeout,
            #method: method,
            #params: params,
            #headers: headers,
            #responseType: responseType,
            #onDownloadProgress: onDownloadProgress,
            #validateStatus: validateStatus,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #call,
            [],
            {
              #url: url,
              #timeout: timeout,
              #method: method,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #call,
            [],
            {
              #url: url,
              #timeout: timeout,
              #method: method,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> get(
    String? url, {
    Duration? timeout,
    Map<String, String>? params = const {},
    Map<String, String>? headers = const {},
    _i4.ResponseType? responseType = _i4.ResponseType.json,
    _i2.DownloadCallback? onDownloadProgress,
    _i4.ValidateCallback? validateStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #timeout: timeout,
            #params: params,
            #headers: headers,
            #responseType: responseType,
            #onDownloadProgress: onDownloadProgress,
            #validateStatus: validateStatus,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> post(
    String? url, {
    Duration? timeout,
    Map<String, String>? params = const {},
    Map<String, String>? headers = const {},
    _i4.ResponseType? responseType = _i4.ResponseType.json,
    _i2.DownloadCallback? onDownloadProgress,
    _i4.ValidateCallback? validateStatus,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #timeout: timeout,
            #params: params,
            #headers: headers,
            #responseType: responseType,
            #onDownloadProgress: onDownloadProgress,
            #validateStatus: validateStatus,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> put(
    String? url, {
    Duration? timeout,
    Map<String, String>? params = const {},
    Map<String, String>? headers = const {},
    _i4.ResponseType? responseType = _i4.ResponseType.json,
    _i2.DownloadCallback? onDownloadProgress,
    _i4.ValidateCallback? validateStatus,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #timeout: timeout,
            #params: params,
            #headers: headers,
            #responseType: responseType,
            #onDownloadProgress: onDownloadProgress,
            #validateStatus: validateStatus,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> delete(
    String? url, {
    Duration? timeout,
    Map<String, String>? params = const {},
    Map<String, String>? headers = const {},
    _i4.ResponseType? responseType = _i4.ResponseType.json,
    _i2.DownloadCallback? onDownloadProgress,
    _i4.ValidateCallback? validateStatus,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #timeout: timeout,
            #params: params,
            #headers: headers,
            #responseType: responseType,
            #onDownloadProgress: onDownloadProgress,
            #validateStatus: validateStatus,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> patch(
    String? url, {
    Duration? timeout,
    Map<String, String>? params = const {},
    Map<String, String>? headers = const {},
    _i4.ResponseType? responseType = _i4.ResponseType.json,
    _i2.DownloadCallback? onDownloadProgress,
    _i4.ValidateCallback? validateStatus,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #timeout: timeout,
            #params: params,
            #headers: headers,
            #responseType: responseType,
            #onDownloadProgress: onDownloadProgress,
            #validateStatus: validateStatus,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
              #data: data,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);
  @override
  _i5.Future<_i4.Response> head(
    String? url, {
    Duration? timeout,
    Map<String, String>? params = const {},
    Map<String, String>? headers = const {},
    _i4.ResponseType? responseType = _i4.ResponseType.json,
    _i2.DownloadCallback? onDownloadProgress,
    _i4.ValidateCallback? validateStatus,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {
            #timeout: timeout,
            #params: params,
            #headers: headers,
            #responseType: responseType,
            #onDownloadProgress: onDownloadProgress,
            #validateStatus: validateStatus,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {
              #timeout: timeout,
              #params: params,
              #headers: headers,
              #responseType: responseType,
              #onDownloadProgress: onDownloadProgress,
              #validateStatus: validateStatus,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);
  @override
  _i5.FutureOr<_i4.Response> request(_i4.Request? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [request],
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #request,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #request,
            [request],
          ),
        )),
      ) as _i5.FutureOr<_i4.Response>);
}
